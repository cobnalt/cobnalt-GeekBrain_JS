// Ну по использованию замыканий, я думаю , по похожему сценарию, как и счетчик,
// можно при добавлении количества товаров в корзину, при удалении из корзины. Но,
// как Вы и сказали, замыкания и так используются в неявном виде всегда, так что...


// 'use strict'

// Если использовать строгий режим, то переменная а не определена, объекта
// window не существует.
if (!("a" in window)) {
    var a = 1;
}
alert(a);


// Вообще не понял, что здесь происходит, кроме того, что
// переменную а нигде вообще не определили
var b = function a(x) {
    x && a(--x);
};
alert(a);


// Как повествует методичка определение функции на первом месте при разборе кода
// И в переменную с таким же именем записывается ссылка на нее.
// Следовательно, при вызове алерт должна выйти сама функция в виде текста.
function a(x) {
    return x * 2;
}
var a;
alert(a);


// Как написано в MDN есть псевдомассив arguments, туда попадают все аргументы
// функции, что позволяет делать штуки, типа функций с переменным числом
// аргумментов. При строгом режиме не меняет значение, без него выводит 10.
function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);


// При нестрогом режиме должен быть объект window, при строгом, как я понимаю,
// контекст биндится на null, он и должен выйти в алерте.
function a() {
    alert(this);
}
a.call(null);
